name: Validation

on: [
    push,
    pull_request
]

jobs:
    validation:
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: true
            matrix:
                php-version: [
                    '7.3',
                    '7.4',
                    'nightly'
                ]

        env:
            APPLICATION_ENV: devtest
            APPLICATION_STORE: DE
            PROJECT: suite
            SPRYKER_TESTING_ENABLED: 1

        services:
            mariadb:
                image: mariadb:latest
                ports:
                    - 3306
                env:
                    MYSQL_USER: devtest
                    MYSQL_PASSWORD: mate20mg
                    MYSQL_DATABASE: DE_devtest_zed
                    MYSQL_ROOT_PASSWORD: mate20mg
                options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

        steps:
            - uses: actions/checkout@v1
              with:
                  fetch-depth: 1

            - uses: actions/setup-node@v1
              with:
                  node-version: '12'

            - name: Verify MariaDB connection
              env:
                PORT: ${{ job.services.mariadb.ports[3306] }}
              run: |
                while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
                    sleep 1
                done

            - name: Validate composer.json and composer.lock
              run: composer validate --strict

            - name: Get Composer Cache Directory
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"

            - uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Composer install
              run: |
                  composer --version
                  composer install

            - name: Setup PHP
              uses: shivammathur/setup-php@v1
              with:
                  php-version: ${{ matrix.php-version }}
                  extensions: mbstring, intl

            - name: Install NPM packages
              run: |
                  npm install speccy@0.11.0 -g

            - name: Generate transfer objects
              run: vendor/bin/console transfer:generate

            - name: Generate transfer databuilder objects
              run: vendor/bin/console transfer:databuilder:generate

            - name: Propel install
              run: vendor/bin/console propel:install

            - name: Codecept build
              run: vendor/bin/codecept build --ansi

            - name: Generate autocompletion files
              run: vendor/bin/console dev:ide-auto-completion:generate

            - name: Generate rest API dcoumentation
              run: vendor/bin/console rest-api:generate:documentation

            - name: Setup search
              run: vendor/bin/console setup:search

            - name: Frontend install-dependencies
              run: |
                vendor/bin/console frontend:project:install-dependencies
                vendor/bin/console frontend:yves:install-dependencies

            - name: Validate propel files
              run: |
                  vendor/bin/console propel:schema:validate
                  vendor/bin/console propel:schema:validate-xml-names

            - name: Validate transfer files
              run: vendor/bin/console transfer:validate

            - name: Run CodeStyle checks
              run: vendor/bin/console code:sniff:style

            - name: Run Architecture rules
              run: vendor/bin/phpmd src/ text vendor/spryker/architecture-sniffer/src/ruleset.xml --minimumpriority 2

            - name: Run PHPStan
              run: vendor/bin/phpstan analyze -l 5 -c phpstan.neon src/

            - name: Run Psalm
              run: vendor/bin/psalm.phar --show-info=false
